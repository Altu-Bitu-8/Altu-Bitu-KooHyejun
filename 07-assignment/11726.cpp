#include <iostream>
using namespace std;

int main() {
    int n;
    cin >> n;  // 타일링 할 가로 길이 n 입력 받기

    // dp[i]는 2×i 크기의 직사각형을 타일로 채우는 경우의 수
    int dp[1001] = {0};  //문제에서 최대 n은 1000이므로 충분한 크기의 배열 선언

    // 초기 조건 설정
    dp[1] = 1; // 2×1 크기는 세로로 타일 하나만 채울 수 있는 경우에 1가지
    dp[2] = 2; // 2×2 크기는 세로 타일 2개 또는 가로 타일 2개로 2가지 방법이 있음

    // 점화식을 이용해 dp 배열 채우기
    for (int i = 3; i <= n; ++i) {
        // dp[i-1]: 마지막에 세로 타일(2×1)을 붙이는 경우
        // dp[i-2]: 마지막에 가로 타일 두 개(1×2)를 가로로 붙이는 경우
        dp[i] = (dp[i - 1] + dp[i - 2]) % 10007; // 결과는 10007로 나눈 나머지를 저장
    }

    // 결과 출력: 2×n 타일링의 경우의 수
    cout << dp[n] << '\n';

    return 0;
}
